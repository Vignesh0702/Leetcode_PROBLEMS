class Solution {
public:
    bool isValid(string s) {
        stack<int> paranthesis;
        unordered_map<char,char> para;
        para['['] = ']';
        para['{'] = '}';
        para['('] = ')';
        if(s.size() % 2 !=0) return false;
        for(int i=0;i<s.size();i++)
        {
            if(s[i] == '{' || s[i] == '[' || s[i]=='(')
            {
                paranthesis.push(s[i]);
            }
            else if(s[i] == '}' || s[i]==']'|| s[i]==')')
            {
                if(paranthesis.empty() == 1)
                {
                    return false;
                }
                else
                {
                 char current=paranthesis.top();
                 paranthesis.pop();
                 if(para[current]!=s[i])
                 {
                     return false;
                 } 
                }
            }
        }
        if(paranthesis.empty() == 1)
        {
            return true;
        }
        return false;
            
    }
};
